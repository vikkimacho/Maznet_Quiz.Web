@model IEnumerable<Quiz.Web.DTO.Models.QuestionBankDetail>
<script>
    $(document).ready(function () {
        $('#QuestionBank').DataTable();
    });
    function downloadTemplate() {        
        window.open('@Url.Action("DownloadTemplate", "QuestionBank")', "_blank", "", true);
    }
</script>
<div class="container-fluid">

    <h3 class="foreBlue">Update Question Bank</h3>

    <div class="row">
        <div class="col-md-12">
            <div class="well ds_lightBlue">
                <div class="input-group">
                    <input type="text" id="txtQuestionBankSearch" class="form-control" placeholder="Search question bank">
                    <input type="hidden" id="hdnQuestionBankSearch" />
                    <span class="input-group-btn">
                        <button class="btn btn-default saveButtonsColor" type="button"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12" style="margin-bottom:20px;">
        <button type="button" class="btn saveButtonsColor pull-right" data-toggle="modal" data-target="#myModal">Add New <i class="fa fa-plus-circle"></i></button>
    </div>
    

    <table class="table" id="QuestionBank">
        <thead>
            <tr>
                <td>
                    Question Bank
                </td>
                <td>
                    Question Bank Description
                </td>
                <td>
                    Duration
                </td>
                <td>
                    Modified Date
                </td>
                <td>
                    Action
                </td>
            </tr>
        </thead>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a href="@Url.Action("QuestionsList","QuestionBank",new { QuestionBankId = item.ID})">@item.QuestionBankName</a>
                </td>
                <td>
                    @item.Description
                </td>
                <td>
                    @item.Duration
                </td>
                <td>
                    @item.ModifiedDate
                </td>
                <td>
                    <a onclick="GetQuestionsBankEdit('@item.ID')">Edit</a> /
                    <a onclick="QuestionsBankDelete('@item.ID')">Delete</a>
                </td>

            </tr>
        }

    </table>
</div>

@*<div class="container-fluid">
    
    <div class="form-group">
        <label>Question Bank Title</label>
        <input type="text" class="form-control" id="txtQuestionBankTitle" placeholder="Enter Question Bank Name" />
    </div>
    <div class="form-group">
        <label>Question Bank Description</label>
        <textarea id="txtQuestionBankDescription" class="form-control" rows="7" cols="30"></textarea>
    </div>
    <div class="form-group">
        <input type="file" class="form-control-file" id="flQuestionUpload" />
    </div>
    <div class="form-group">
        <label>Status</label>
        <select id="ddlStatusQuestionBank" class="form-control">
            <option value="ACTIVE">Active</option>
            <option value="NOTACTIVE">Not Active</option>
        </select>
    </div>
    <div class="form-group">
        <button class="btn btn-primary" id="btnUpdateQuestionBank">Update</button>
    </div>
</div>*@

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Question Bank</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>Question Bank Title</label>
                    <input type="text" class="form-control" id="txtQuestionBankTitle" placeholder="Enter Question Bank Name" />
                    <span style="color:red;display:none" id="Er_txtQuestionBankTitle">Question Bank Title is Required</span>
                </div>
                <div class="form-group">
                    <label>Question Bank Description</label>
                    <textarea id="txtQuestionBankDescription" class="form-control" rows="7" cols="30"></textarea>
                    <span style="color:red;display:none" id="Er_txtQuestionBankDescription">Question Bank Description is Required</span>
                </div>
                <div class="form-group">
                    <label>Duration</label>
                    <input type="text" class="form-control" id="txtQuestionBankDuration" placeholder="HH:MM:SS" />
                    <span>Duration Format(HH:MM:SS)</span>
                    <span style="color:red;display:none" id="Er_txtQuestionBankDuration">Question Bank Duration is Required</span>
                </div>
                <div class="form-group">
                    <label>Question Bank Template</label>
                    <a onclick="downloadTemplate()">click here</a>
                </div>
                <div class="form-group">
                    <input type="file" class="form-control-file" id="flQuestionUpload" />
                    <span style="color:red;display:none" id="Er_flQuestionUpload">Upload Question Bank</span>
                </div>
                <div class="form-group">
                    <label>Status</label>
                    <select id="ddlStatusQuestionBank" class="form-control">
                        <option value="ACTIVE">Active</option>
                        <option value="NOTACTIVE">Not Active</option>
                    </select>
                </div>
                <div class="form-group">
                    <button class="btn btn-primary" id="btnUpdateQuestionBank">Update</button>
                </div>
            </div>           
        </div>
    </div>
</div>




<div class="modal fade" id="EditModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Question Bank</h4>
                <input type="hidden" id="Edit_QuestionBankId"/>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>Question Bank Title</label>
                    <input type="text" class="form-control" id="EdittxtQuestionBankTitle" placeholder="Enter Question Bank Name" />
                    <span style="color:red;display:none" id="Er_EdittxtQuestionBankTitle">Question Bank Title is Required</span>
                </div>
                <div class="form-group">
                    <label>Question Bank Description</label>
                    <textarea id="EdittxtQuestionBankDescription" class="form-control" rows="7" cols="30"></textarea>
                    <span style="color:red;display:none" id="Er_EdittxtQuestionBankDescription">Question Bank Duration is Required</span>
                </div>
                <div class="form-group">
                    <label>Duration</label>
                    <input type="text" class="form-control" id="txtEditQuestionBankDuration" placeholder="HH:MM:SS" />
                    <span>Duration Format(HH:MM:SS)</span>
                    <span style="color:red;display:none" id="Er_txtEditQuestionBankDuration">Question Bank Duration is Required</span>
                </div>
                <div class="form-group">
                    <label>Status</label>
                    <select id="ddlEditStatusQuestionBank" class="form-control">
                        <option value="ACTIVE">Active</option>
                        <option value="NOTACTIVE">Not Active</option>
                    </select>
                </div>
                <div class="form-group">
                    <button class="btn btn-primary" id="btnEditQuestionBank">Update</button>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        var files;
        $("#flQuestionUpload").on('change', function (e) {
            debugger;
             files = e.target.files;
            var isValidFiles = true;

            $('#file-error1').text('');
            var file_size = $('#flQuestionUpload')[0].files[0].size;
            if (file_size < 120000) {
                $(files).each(function () {
                    var filename = this.name;
                    if ((filename.toUpperCase().indexOf(".XLSX") < 1) || (filename.toUpperCase().indexOf(".XLS")) < 1) {
                        isValidFiles = false;
                    }
                });
                if (isValidFiles) {
                    ContactFile = e.target.files;

                }
                else {
                    $('#mdlmessage').text('Choose Only .xlsx or xlx File');
                    $('#modalPopUp').addClass("is-visible");
                    $("#chooseContactsFile").val("");
                }
            }
            else {
                $('.box-error').css("border-color", "#FF0000");
                $('#file-error1').text('File size must be less than 120KB');
                $("#chooseContactsFile").val("");
            }
        });

        $("#btnUpdateQuestionBank").click(function () {




            var questionBankName = $("#txtQuestionBankTitle").val();
            var questionBankDescription = $("#txtQuestionBankDescription").val();
            var status = $("#ddlEditStatusQuestionBank").val();
            var duration = $('#txtQuestionBankDuration').val();
            var finalStatus = false;
            if (status == "ACTIVE") {
                finalStatus = true;
            }
            $("#Er_txtQuestionBankTitle").hide();
            $("#Er_txtQuestionBankDescription").hide();
            $("#Er_flQuestionUpload").hide();
            $("#Er_txtQuestionBankDuration").hide();

            var Flag = true;


            if (!questionBankName) {

                $("#Er_txtQuestionBankTitle").show();
                Flag = false;

            }

            if (!questionBankDescription) {

                $("#Er_txtQuestionBankDescription").show();
                Flag = false;

            }
            if (!duration) {

                $("#Er_txtQuestionBankDuration").show();
                Flag = false;

            }
            

            if (files) {
                var data = new FormData();
                for (var x = 0; x < ContactFile.length; x++) {
                    data.append("file" + x, ContactFile[x]);
                }
            }
            else {
                $("#Er_flQuestionUpload").show();
                flag = false;
            }
            if (Flag) {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UploadQuestionBank", "QuestionBank")?QuestionBankName=' + questionBankName + '&Duration=' + duration + '&Description=' + questionBankDescription + '&Status=' + finalStatus,
                    contentType: false,
                    processData: false,
                    data: data,
                    beforeSend: function () {

                        uploaded = 1;
                    },
                    complete: function () {

                    },
                    success: function (result) {
                        if (result.data.Result) {
                            alert("Question bank Uploaded Succesfully");
                            window.location.reload();
                        }
                        else {
                            alert("Question bank Upload Failed");
                            window.location.reload();
                        }
                    },
                    error: function (xhr, status, p3, p4) {
                        var err = "Error " + " " + status + " " + p3 + " " + p4;
                        if (xhr.responseText && xhr.responseText[0] == "{")
                            err = JSON.parse(xhr.responseText).Message;

                    },
                    cache: false
                });

            }

        });






        $("#btnEditQuestionBank").click(function () {

            var QuestionBankId = $("#Edit_QuestionBankId").val();
            var questionBankName = $("#EdittxtQuestionBankTitle").val();
            var questionBankDescription = $("#EdittxtQuestionBankDescription").val();
            var status = $("#ddlStatusQuestionBank").val();
            var duration = $("#txtEditQuestionBankDuration").val();
            var finalStatus = false;
            if (status == "ACTIVE") {
                finalStatus = true;
            }
            $("#Er_EdittxtQuestionBankTitle").hide();
            $("#Er_EdittxtQuestionBankDescription").hide();
            $("#Er_EditflQuestionUpload").hide();
            $("#Er_EdittxtQuestionBankDescription").hide();

            var Flag = true;


            if (!questionBankName) {

                $("#Er_EdittxtQuestionBankTitle").show();
                Flag = false;

            }
            if (!duration) {

                $("#Er_EdittxtQuestionBankDescription").show();
                Flag = false;

            }
            
            if (!questionBankDescription) {

                $("#Er_EdittxtQuestionBankDescription").show();
                Flag = false;

            }


            data = {
                ID: QuestionBankId,
                QuestionBankName: questionBankName,
                Description: questionBankDescription,
                Status: finalStatus,
                Duration: duration
            }

            if (Flag) {

                $.ajax({
                        type: "POST",
                        url: '@Url.Action("UpdateQuestionBank", "QuestionBank")',
                        contentType: "application/json",
                        dataType: "json",
                        data: JSON.stringify(data),
                        complete: function () {

                        },
                        success: function (result) {
                            if (result.Result) {
                                alert("Question bank Updated Succesfully");
                                window.location.reload();
                            }
                            else {
                                alert("Question bank Update Failed");
                                window.location.reload();
                            }
                        },
                        error: function (xhr, status, p3, p4) {
                            var err = "Error " + " " + status + " " + p3 + " " + p4;
                            if (xhr.responseText && xhr.responseText[0] == "{")
                                err = JSON.parse(xhr.responseText).Message;

                        },
                        cache: false
                    })



            }
            
                
    })






    })


    function GetQuestionsBankEdit(QuestionBankId) {
        
        $.ajax({
            type: "GET",
            url: '@Url.Action("QuestionsBankEdit", "QuestionBank")?QuestionBankId=' + QuestionBankId,
            contentType: false,
            processData: false,
            async: false,
            success: function (result) {
                if (result) {

                    debugger;

                    $("#EditModal").modal("show");
                    $("#Edit_QuestionBankId").val(result.ID);
                    $("#EdittxtQuestionBankTitle").val(result.QuestionBankName);
                    $("#EdittxtQuestionBankDescription").val(result.Description);
                    $("#txtEditQuestionBankDuration").val(result.Duration.Hours + ":" + result.Duration.Minutes + ":"+result.Duration.Seconds);
                    
                }
            },
            error: function (xhr, status, p3, p4) {
                var err = "Error " + " " + status + " " + p3 + " " + p4;
                if (xhr.responseText && xhr.responseText[0] == "{")
                    err = JSON.parse(xhr.responseText).Message;

            },
            cache: false
        });

    }


    function QuestionsBankDelete(QuestionBankId) {

        //confirm("Are you Sure to delete Question ");

        if (confirm("Are you Sure to Delete this Question Bank")) {
            $.ajax({
            type: "GET",
                url: '@Url.Action("QuestionsBankDelete", "QuestionBank")?QuestionBankId=' + QuestionBankId,
            contentType: false,
            processData: false,
            async: false,
                success: function (Result) {
                    if (Result.Result == true) {

                        alert("Question Bank Deleted Succesfully.");

                        window.location.reload();
                }
            },
            error: function (xhr, status, p3, p4) {
                var err = "Error " + " " + status + " " + p3 + " " + p4;
                if (xhr.responseText && xhr.responseText[0] == "{")
                    err = JSON.parse(xhr.responseText).Message;

            },
            cache: false
        });
        }       
        
    }

</script>
