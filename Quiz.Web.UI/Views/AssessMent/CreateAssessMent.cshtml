@model Quiz.Web.DTO.Models.AssesmentPageModal
@{
    ViewBag.Title = "CreateAssessMent";
    Layout = "~/Views/Shared/_Layout.cshtml";


}

@if (Model != null)
{

    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

    @*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">*@

    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap-theme.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/css/bootstrap-datetimepicker.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.6/moment.min.js"></script>
    @*<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/js/bootstrap-datetimepicker.min.js"></script>



    <style>
        .bs-wizard {
            margin-top: 40px;
        }

        /*Form Wizard*/
        .bs-wizard {
            border-bottom: solid 1px #e0e0e0;
            padding: 0 0 10px 0;
        }

            .bs-wizard > .bs-wizard-step {
                padding: 0;
                position: relative;
            }

                .bs-wizard > .bs-wizard-step + .bs-wizard-step {
                }

                .bs-wizard > .bs-wizard-step .bs-wizard-stepnum {
                    color: #595959;
                    font-size: 16px;
                    margin-bottom: 5px;
                }

                .bs-wizard > .bs-wizard-step .bs-wizard-info {
                    color: #999;
                    font-size: 14px;
                }

                .bs-wizard > .bs-wizard-step > .bs-wizard-dot {
                    position: absolute;
                    width: 30px;
                    height: 30px;
                    display: block;
                    background: #fbe8aa;
                    top: 45px;
                    left: 50%;
                    margin-top: -15px;
                    margin-left: -15px;
                    border-radius: 50%;
                }

                    .bs-wizard > .bs-wizard-step > .bs-wizard-dot:after {
                        content: ' ';
                        width: 14px;
                        height: 14px;
                        background: #fbbd19;
                        border-radius: 50px;
                        position: absolute;
                        top: 8px;
                        left: 8px;
                    }

                .bs-wizard > .bs-wizard-step > .progress {
                    position: relative;
                    border-radius: 0px;
                    height: 8px;
                    box-shadow: none;
                    margin: 20px 0;
                }

                    .bs-wizard > .bs-wizard-step > .progress > .progress-bar {
                        width: 0px;
                        box-shadow: none;
                        background: #fbe8aa;
                    }

                .bs-wizard > .bs-wizard-step.complete > .progress > .progress-bar {
                    width: 100%;
                }

                .bs-wizard > .bs-wizard-step.active > .progress > .progress-bar {
                    width: 50%;
                }

                .bs-wizard > .bs-wizard-step:first-child.active > .progress > .progress-bar {
                    width: 0%;
                }

                .bs-wizard > .bs-wizard-step:last-child.active > .progress > .progress-bar {
                    width: 100%;
                }

                .bs-wizard > .bs-wizard-step.disabled > .bs-wizard-dot {
                    background-color: #f5f5f5;
                }

                    .bs-wizard > .bs-wizard-step.disabled > .bs-wizard-dot:after {
                        opacity: 0;
                    }

                .bs-wizard > .bs-wizard-step:first-child > .progress {
                    left: 50%;
                    width: 50%;
                }

                .bs-wizard > .bs-wizard-step:last-child > .progress {
                    width: 50%;
                }

                .bs-wizard > .bs-wizard-step.disabled a.bs-wizard-dot {
                    pointer-events: none;
                }

        .well {
            padding: 10px;
        }

        #lblAssessMentName {
            margin-top: 10px;
        }

        #imgAddMoreText {
            width: 30px;
        }

        #dvAddMoreText {
            padding: 8px;
        }

            #dvAddMoreText label {
                margin-top: 5px;
            }
    </style>





    <div class="row">
        <h3>Create Assessment</h3>
    </div>

    <div class="container-fluid">
        <div class="row bs-wizard" style="border-bottom:0;">
            <div class="col-xs-3 bs-wizard-step active" id="dvStepOne">
                <div class="text-center bs-wizard-stepnum">Assessment</div>
                <div class="progress"><div class="progress-bar"></div></div>
                <a href="#" class="bs-wizard-dot"></a>
            </div>
            <div class="col-xs-3 bs-wizard-step disabled" id="dvStepTwo">
                <!-- complete -->
                <div class="text-center bs-wizard-stepnum">Environment</div>
                <div class="progress"><div class="progress-bar"></div></div>
                <a href="#" class="bs-wizard-dot"></a>
            </div>
            <div class="col-xs-3 bs-wizard-step disabled" id="dvStepThree">
                <!-- complete -->
                <div class="text-center bs-wizard-stepnum">Shortlist Criteria</div>
                <div class="progress"><div class="progress-bar"></div></div>
                <a href="#" class="bs-wizard-dot"></a>
            </div>
            <div class="col-xs-3 bs-wizard-step disabled" id="dvStepFour">
                <!-- active -->
                <div class="text-center bs-wizard-stepnum">Scheduling</div>
                <div class="progress"><div class="progress-bar"></div></div>
                <a href="#" class="bs-wizard-dot"></a>
            </div>
        </div>
    </div>

    <div id="divStep1">
        <div class="row">


            <div class="form-group col-lg-8 col-md-8 col-sm-12 col-xs-12">
                <div class="col-md-4"> <label id="lblAssessMentName">Name your assessment </label></div>
                <div class="col-md-6">
                    <input type="text" class="form-control" id="txtAssessmentName" placeholder="ex:Software Engineer" />
                    <span style="color:red;" id="errorAssName"></span>
                </div>
            </div>


            <div class="col-md-12">
                <div class="well ds_lightBlue">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search keyword eg : sales,software engineer etc">
                        <span class="input-group-btn">
                            <button class="btn btn-default ds_darkBlue" type="button"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>
            </div>

        </div>

        <hr />
        <div class="row">
            <div class="col-md-12 ds_darkBlue" id="dvAddMoreText">
                <label class="pull-left">Uploaded Question Banks</label>
                <span hidden class="pull-right"><img id="imgAddMoreText" src="~/Content/Icons/Adding Icon.png" /></span>
            </div>
        </div>

        <div class="row">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" id="chkCheckAllAssessMent" />
                        </th>
                        <th>
                            Name
                        </th>
                        <th>
                            Questions
                        </th>
                        <th>
                            Duration
                        </th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model.LQuestionBankModal)
                    {
                        <tr>
                            <td>
                                <input id=@item.Id type="checkbox" class="chkExamSubjectSelection" />
                            </td>
                            <td>
                                <span id="spnQuestionBankName_@item.Id">@item.QuestionBankName - @item.QuestionBankDescription </span>
                            </td>
                            <td>
                                <span id='spnNoOfQuestions_@item.Id'>@item.NoOfQuestions</span>
                            </td>
                            <td>
                                <span id='spnDuration_@item.Id'>@item.Duration </span>
                            </td>
                        </tr>

                    }

                </tbody>

            </table>
            <span id="errorSelectionExam" style="color:red;"></span>

            <div class="row">
                <div class="col-md-12">
                    <input type="button" class="btn ds_darkBlue pull-left" value="Undo Changes" />
                    <span class="pull-right"><label>Total Duration</label> <span>0h 25 mins</span> </span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12 text-right">
                    @*<button class="btn ds_Expired"> Back </button>*@
                    <button id="btnNext1" onclick="return ShowStep2()" class="btn ds_darkBlue">Save & Next </button>
                </div>
            </div>
        </div>
    </div>


    <div id="divStep2" style="display:none;">

        <div class="row">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>
                            Auto Proc
                        </th>
                        <th>
                            Status
                        </th>

                    </tr>
                </thead>
                <tbody>

                    <tr>
                        <td>
                            <span> Browser Lock </span>
                        </td>
                        <td><input type="checkbox" id="chkBrowserLockOn" checked /> </td>
                    </tr>
                    <tr>
                        <td>
                            <span> Print Screen Lock </span>
                        </td>
                        <td><input type="checkbox" id="chkPrintScreenLockOn" checked /> </td>
                    </tr>

                </tbody>

            </table>




        </div>


        <div class="row">
            <h4>Assesment Details</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>
                            Test Name
                        </th>
                        <th>
                            Questions
                        </th>
                        <th>
                            Duration
                        </th>
                        <th>
                            Test Language
                        </th>

                    </tr>
                </thead>
                <tbody id="tbodySelectedAssesments"></tbody>
            </table>


            <br /> <br />  <br />  <br />



            <h4>Candidates details form</h4>
            @*<span>   Do you want to create a new form or use an existing one? </span>
                <input type="radio" name="FormSelection" id="radExistingForm" />Select Existing
                <input type="radio" name="FormSelection" id="radNewForm" checked />Create New*@

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Field Name</th>
                        <th>Field Type</th>
                        <th>Values</th>
                        <th>Mandatory</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model.LstCandidateAssesmentDetailsForm)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="clsFormSelection" id="@item.id" checked />
                                <input type="hidden" id="hdnFormId_@item.id" value="@item.id" />
                                @item.DisplayFieldName
                            </td>
                            <td>@item.FieldType</td>
                            <td>@item.Values</td>

                            @if (item.IsEnabled)
                            {
                                if (item.IsLocked)
                                {
                                    <td><input type="checkbox" disabled id="mandatory_@item.id" checked /> It is Locked</td>
                                }
                                else
                                {
                                    <td><input type="checkbox" id="mandatory_@item.id" checked /> </td>
                                }
                            }
                            else
                            {
                                <td><input type="checkbox" id="mandatory_@item.id" /> </td>
                            }
                        </tr>
                    }

                </tbody>
            </table>


            <div class="col-md-12 text-right">
                <button onclick="return ShowStep1()" class="btn ds_Expired"> Back </button>
                <button id="btnNext1" onclick="return ShowStep3()" class="btn ds_darkBlue">Save & Next </button>
            </div>
        </div>

    </div>



    <div id="divStep3" style="display:none;">
        <span>Step 3</span>
        <h3>Short listing criteria </h3>

        <div>
            Do you want to create a new shortlisting criteria or use an existing one?
            <br />
            <input type="radio" name="ShortListCriteria" id="radExistingShortListCriteria" value="EXISTING" />Select Existing



            <input type="radio" name="ShortListCriteria" id="radNewShortListingCriteria" value="NEW" checked />Create New
            @*<input type="radio" name="ShortListCriteria" id="radCustomShortListingCriteria" />Custom*@
            <br />

            <div id="divNewShortListCriteria">
                Enter a name to save the cutoff

                <input type="text" id="txtShortListCriteria" placeholder="Enter a name to save the cutoff" />
                <input type="button" class="btn btn-info" id="btnSaveCriteria" value="Save New Cutoff" />
                <span id="spnSLErrorMsg" style="color:red;"></span>

            </div>
            <br />
            <select id="ddlExistingShortListCriteria" style="display:none;">
                <option>--Select--</option>
            </select>

        </div>

        <div>
            <div class="grid-legend-band ng-scope" style="position: relative;">
                <span class="legend ng-binding">
                    <span class="red" style="background: rgb(244, 66, 54);"></span>
                    Not Consider
                </span>
                <span class="legend ng-binding">
                    <span class="yellow" style="background: rgb(254, 179, 0);"></span>
                    May Consider
                </span>
                <span class="legend last ng-binding">
                    <span class="blue" style="background: rgb(69, 173, 78);"></span>
                    Strong Consider
                </span>
                <button style="display:none; position: absolute; top: 6px; right: 10px;" type="button" class="btn-secondary">Reset to recommended<div class="disabled-overlay"></div></button>
            </div>
        </div>


        <div id="divSliderSetup">
            @foreach (var item in Model.LQuestionBankModal)
            {
                <p>
                    <label for="amount">@item.QuestionBankName - @item.QuestionBankDescription</label>
                    <input class="clsSlider" type="text" id="txtSlider_@item.Id" readonly style="border:0; color:#f6931f; font-weight:bold;">
                </p>

                <div id="slider-range_@item.Id"></div>
            }

        </div>

        <div class="row">
            <div class="col-md-12 text-right">
                <button onclick="return ShowStep2()" class="btn ds_Expired"> Back </button>
                <button id="btnNext1" onclick="return ShowStep4()" class="btn ds_darkBlue">Save & Next </button>
            </div>
        </div>


    </div>




    <div id="divStep4" style="display:none;">


        <span>Step 4</span>

        <div>Welcome to Step 4 - Scheduling</div>


        <div>
            Date and time details

            <br />

            <label> Country </label> <label>India</label>

            <label> Time Zone </label> <label>(UTC + 5:30) Bombay, Calcutta, Chennai, New Delhi </label>

            <br />

            <div>
                <div class='input-group date' id='dtFrom'>
                    <input type='text' id="txtDtFrom" class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>

                <div class='input-group date' id='dtTo'>
                    <input type='text' id="txtDtTo" class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>


            </div>

            <br />
            <br />

            <div>Choose your mode of scheduling </div>


            <ul class="nav nav-tabs" id="myTab" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="home-tab" data-toggle="tab" href="#divbulkschedule" role="tab" aria-controls="home" aria-selected="true">Bulk Schedule</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="profile-tab" data-toggle="tab" href="#divSingleSchedule" role="tab" aria-controls="profile" aria-selected="false">Single Schedule</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="contact-tab" data-toggle="tab" href="#divCommonLogin" role="tab" aria-controls="contact" aria-selected="false">Common Login</a>
                </li>
            </ul>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="divbulkschedule" role="tabpanel" aria-labelledby="home-tab">

                    @*<input type="file" id="flUploadXLS" /> Upload File
                        <br />
                        Download Sample
                        <a id="lnkDownloadSample" href="~/Content/sample.xlsx">Download here</a>*@

                    Uploaded Candidates List
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>
                                    Title
                                </th>
                                <th>
                                    Uploaded on
                                </th>
                            </tr>
                        </thead>

                        <tbody>


                            @foreach (var item in Model.LstUserDetailMaster)
                            {
                                <tr>
                                    <td><input type="checkbox" id="@item.Id" class="clsUploadedStudents" />  @item.UserTitle</td>
                                    <td>@item.CreatedDate.ToShortDateString()</td>
                                </tr>
                            }
                        </tbody>
                    </table>




                </div>

                <div class="tab-pane fade" id="divSingleSchedule" role="tabpanel" aria-labelledby="profile-tab">
                    Candidate Detail
                    <br />

                    First Name <input type="text" id="txtFirstName" /><br />

                    Last Name <input type="text" id="txtLastName" /><br />

                    Email <input type="text" id="txtEmail" /><br />

                    User Name * <input type="text" id="txtUserName" /><br />

                    Password * <input type="password" id="txtPassword" /><br />

                    Mobile <input type="text" id="txtMobile" /><br />

                    Date of birth

                    <div class='input-group date' id='txtDOB'>
                        <input type='text' class="form-control" id='txtDOBSingle' />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>

                    <br />



                </div>


                <div class="tab-pane fade" id="divCommonLogin" role="tabpanel" aria-labelledby="contact-tab">
                    User Name * <input type="text" id="txtCommonLoginUserName" />
                    <br />
                    Password * <input type="password" id="txtCommonLoginPassword" />
                    <br />

                    No of Candidates * <input type="text" id="txtCLNoOfCandidates" />
                    <br />

                    Send Login Details to  (Enter comma seperated email list.) *

                    <textarea id="txtCLSendLoginDetailsto"> </textarea>




                    <br />
                </div>
            </div>


        </div>

        <div>
            Assessment completion alert    <input type="checkbox" id="chkAlertEmail" /><br />

            <textarea style="display:none;" id="txtAreaAlertEmail" placeholder="Please enter comma separated email id's to receive assessment completion alert. e.g. test@gmail.com,test@yahoo.com">
            </textarea>

            <br />
            <br /><br />
            Candidate Notifications

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Type</th>
                        <th>Email</th>
                        <th>Content</th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td><span id="spnNotificationType"> Assesment Details</span> </td>
                        <td><input type="checkbox" id="chkNotificationEmail" checked /> </td>
                        <td><button id="btnEmailTemplate" style="border: 0;float: none;" tooltip="Select template" class="icon fa fa-pencil action-icon pointer"><div class="disabled-overlay"></div></button></td>
                    </tr>
                </tbody>

            </table>

        </div>


        <div class="row">
            <div class="col-md-12 text-right">
                <button onclick="return ShowStep3()" class="btn ds_Expired"> Back </button>
                <button id="btnSave" onclick="return submitData()" class="btn ds_darkBlue">Submit </button>
            </div>
        </div>

    </div>



    <script type="text/javascript">

        var modelListQB = @Html.Raw(Json.Encode(Model.LQuestionBankModal));

        function ConstructJsonModal()
        {
            debugger;
            var assesmentName = $('#txtAssessmentName').val();
            var LstQuestionBankSelected = new Array();
            for (var i = 0; i < selectedExamSyllabus.length; i++)
            {
                LstQuestionBankSelected.push(selectedExamSyllabus[i].id);
            }
            var IsBrowserLockEnabled =  $('#chkBrowserLockOn').is(':checked');
            var IsPrintScreenLockEnabled = $('#chkPrintScreenLockOn').is(':checked');
            var LstCandidateFormSelectedFields = GetLstCandidateFormSelectedFields();
            var SelectedShortListCriteria = $('#hdnSelectedShortListCriteria').val();
            var ScheduleFrom = $('#txtDtFrom').val();
            var ScheduleTo = $('#txtDtTo').val();
            var schedulePlan = $('#hdnSchedulePlan').val();

            var lstBulkScheduleIds = GetBulkUploadStudentData();

            var SingleScheduleModal = GetSingleScheduleModal();

            var commonLoginModal = GetCommonLoginModal();

            var IsAssessmentCompletionAlertEnabled = $('#chkAlertEmail').is(':checked');
            var AssesmentAlertEmail = $('#txtAreaAlertEmail').val();
            var AssessmentStudentAlertModal = GetAssessmentStudentAlertModal();





            var postModal = new Array();
            postModal = { AssessmentName : assesmentName,LstQuestionBankSelected:LstQuestionBankSelected,IsBrowserLockEnabled:IsBrowserLockEnabled,
                IsPrintScreenLockEnabled :IsPrintScreenLockEnabled, LstCandidateFormSelectedFields:LstCandidateFormSelectedFields,
                SelectedShortListCriteria :SelectedShortListCriteria,ScheduleFrom:ScheduleFrom,ScheduleTo:ScheduleTo,
                SchedulePlan : schedulePlan,lstBulkScheduleIds:lstBulkScheduleIds,SingleScheduleModal:SingleScheduleModal,IsAssessmentCompletionAlertEnabled:IsAssessmentCompletionAlertEnabled
                ,AssesmentAlertEmail:AssesmentAlertEmail,AssessmentStudentAlertModal:AssessmentStudentAlertModal,CommonLoginModal:commonLoginModal
            };
            return postModal;

        }


        function GetCommonLoginModal()
        {
            debugger;
            var txtCommonLoginUserName = $('#txtCommonLoginUserName').val();
            var txtCommonLoginPassword = $('#txtCommonLoginPassword').val();
            var txtCLNoOfCandidates = $('#txtCLNoOfCandidates').val();
            var txtCLSendLoginDetailsto = $('#txtCLSendLoginDetailsto').val();
            var postData = new Array();
            postData= {CommonLoginUserName:txtCommonLoginUserName, CommonLoginPassword:txtCommonLoginPassword, CLNoOfCandidates:txtCLNoOfCandidates,CLSendLoginDetailsto:txtCLSendLoginDetailsto};
            return postData;

        }


        function GetLstCandidateFormSelectedFields()
        {
            debugger;
            var postData = new Array();
            $('.clsFormSelection').each(function (i, obj) {
                var elementId = obj.id;
                if($('#'+elementId).is(':checked'))
                {
                    var isMandatory = $('#mandatory_'+elementId).is(':checked');
                    var selectedData = {IsMandatory :isMandatory , FormId : elementId  };
                    postData.push(selectedData);
                }
            });
            return postData;
        }


        function GetBulkUploadStudentData()
        {
            var postData = new Array();
            $('.clsUploadedStudents').each(function (i, obj) {
                var elementId = obj.id;
                if($('#'+elementId).is(':checked'))
                {
                    postData.push(elementId);
                }
            });
            return postData;

        }



        function GetSingleScheduleModal()
        {
            debugger;
            var FirstName = $('#txtFirstName').val();
            var LastName = $('#txtLastName').val();
            var Email = $('#txtEmail').val();
            var UserName = $('#txtUserName').val();
            var Password = $('#txtPassword').val();
            var Mobile = $('#txtMobile').val();
            var DOB = $('#txtDOBSingle').val();
            var postData = new Array();
            postData= {FirstName:FirstName, LastName:LastName, Email:Email,UserName:UserName,Password:Password,Mobile:Mobile,DOB:DOB};
            return postData;
        }


        function GetAssessmentStudentAlertModal()
        {
            var chkNotificationEmail =  $('#chkNotificationEmail').is(':checked');
            var txtCCEMail = $('#txtCCEMail').val();
            var txtBCCEMail = $('#txtBCCEMail').val();
            var emailBody = $('#emailBody').val();
            var type = $('#spnNotificationType').text();
            var CommunicationType = 'EMAIL';

            var postData = new Array();

            postData= {IsEnabled : chkNotificationEmail , Type : type, CommunicationType:CommunicationType , BodyofMessage:emailBody,CC: txtCCEMail ,
                BCC:txtBCCEMail};

            return postData;


        }



        function ValidateFormSubmission()
        {
            debugger;
            return true;
        }


        function submitData()
        {
            debugger;
            if(ValidateFormSubmission())
            {
                var postData =  ConstructJsonModal();
                var postPreferenceData = JSON.stringify({
                    'postAssessmentModal': postData
                });

                try {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("PostCreateAssessment", "AssessMent")",
                        contentType: 'application/json; charset=utf-8',
                        data: postPreferenceData,
                        beforeSend: function () {

                        },
                        complete: function () {

                        },
                        success: function (data) {
                            if(data.Result == 'Success')
                            {
                                alert("Assessment Created Successfully.");
                                window.location.reload();
                            }
                            else{
                                alert("Something went wrong.")
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            console.log(xhr.status);
                            console.log(xhr.responseText);
                            console.log(thrownError);
                        },
                        cache: false
                    });
                }
                catch (err) {
                    console.log(err);
                }
            }
            else{
                alert("Please fill all mandatory fields.");
            }
        }



        $(function () {
            $('#dtFrom').datetimepicker();
            $('#dtTo').datetimepicker();
            $('#txtDOB').datetimepicker();
        });


        var selectedExamSyllabus = new Array();
        function ShowStep1() {
            $('#divStep1').show();
            $('#divStep2').hide();
            $('#divStep3').hide();
            $('#divStep4').hide();

            $('#dvStepOne').addClass('active').removeClass('disabled');
            $('#dvStepTwo').removeClass('active').addClass('disabled');
            $('#dvStepThree').removeClass('active').addClass('disabled');
            $('#dvStepFour').removeClass('active').addClass('disabled');
        }



        function ShowStep2() {

            var validateStatus = ValidateStep2();
            if (validateStatus) {
                $('#divStep1').hide();
                $('#divStep2').show();
                $('#divStep3').hide();
                $('#divStep4').hide();
                debugger;
                $('#tbodySelectedAssesments').empty();
                for (var i = 0; i < selectedExamSyllabus.length; i++)
                {
                    $('#tbodySelectedAssesments').append('<tr>');
                    var questBankname = selectedExamSyllabus[i].QuestionBankName;
                    var noOfQues = selectedExamSyllabus[i].NoOfQuestions;
                    var duration = selectedExamSyllabus[i].Duration;
                    $('#tbodySelectedAssesments').append('<td>' + questBankname + '</td>');
                    $('#tbodySelectedAssesments').append('<td>' + noOfQues + '</td>');
                    $('#tbodySelectedAssesments').append('<td>' + duration + '</td>');
                    $('#tbodySelectedAssesments').append('<td>English</td>');
                    $('#tbodySelectedAssesments').append('</tr>');


                }

                $('.chkExamSubjectSelection').each(function (i, obj) {
                    if ($('#' + obj.id).is(':checked')) {

                    }
                    else
                    {
                        $('#slider-range_'+ obj.id).hide();
                    }
                });




                $('#dvStepOne').addClass('active').removeClass('disabled');
                $('#dvStepTwo').addClass('active').removeClass('disabled');
                $('#dvStepThree').removeClass('active').addClass('disabled');
                $('#dvStepFour').removeClass('active').addClass('disabled');
            }
            else {
                //alert("Please fill all mandatory fields to go forward");
            }

        }

        function ValidateStep2() {
            var returnStatus = true;

            //Step 1 with name
            var assesmentName = $('#txtAssessmentName').val();
            if (assesmentName == null || assesmentName == '') {
                $('#errorAssName').text('Please enter name to go step 2');
                returnStatus = false;
            }
            else {
                $('#errorAssName').text('');
            }
            //Step 2 with selection

            var anyoneSelected = false;
            $('.chkExamSubjectSelection').each(function (i, obj) {
                var elementId = obj.id;
                if ($('#' + elementId).is(':checked')) {
                    anyoneSelected = true;
                }
            });

            if (!anyoneSelected) {
                $('#errorSelectionExam').text('Please select any one in table.');
                returnStatus = false;
            }
            else {
                $('#errorSelectionExam').text('');
            }
            return returnStatus;
        }


        function ValidateStep3() {
            var returnStatus = true;


            return returnStatus;
        }




        function ShowStep3() {
            var validateStatus = ValidateStep3();
            if (validateStatus) {
                $('#divStep1').hide();
                $('#divStep2').hide();
                $('#divStep3').show();
                $('#divStep4').hide();

                $('#dvStepOne').addClass('active').removeClass('disabled');
                $('#dvStepTwo').addClass('active').removeClass('disabled');
                $('#dvStepThree').addClass('active').removeClass('disabled');
                $('#dvStepFour').removeClass('active').addClass('disabled');
            }
            else {
                //alert("Please fill all mandatory fields to go forward");
            }
        }

        function ShowStep4() {
            var validateStatus = ValidateStep4();
            if (validateStatus) {
                $('#divStep1').hide();
                $('#divStep2').hide();
                $('#divStep3').hide();
                $('#divStep4').show();

                $('#dvStepOne').addClass('active').removeClass('disabled');
                $('#dvStepTwo').addClass('active').removeClass('disabled');
                $('#dvStepThree').addClass('active').removeClass('disabled');
                $('#dvStepFour').addClass('active').removeClass('disabled');
            }
            else {
                //alert("Please fill all mandatory fields to go forward");
            }
        }

        function ValidateStep4() {
            var returnStatus = true;


            return returnStatus;
        }







        $(document).ready(function () {


            $("#btnSaveCriteria").click(function () {
                debugger;
                var txtShortListCriteria = $('#txtShortListCriteria').val();
                if(txtShortListCriteria == '')
                {
                    $('#spnSLErrorMsg').text('Please give valid name for new criteria');
                    return false;
                }
                else{

                    var postDataForEligibilityCriteria = new Array();
                    $('.chkExamSubjectSelection').each(function (i, obj) {
                        //$('#' + obj.id).prop('checked', true);
                        if ($('#' + obj.id).is(':checked')) {
                            //NotConsider	MayConsider	StrongConsider
                            debugger;
                            var sliderVal = $('#txtSlider_'+ obj.id).val();
                            if(sliderVal != '')
                            {   
                                var NotConsider = sliderVal.split("-")[0];
                                var MayConsider = sliderVal.split("-")[1];
                                var StrongConsider = 0;
                                var postData = {QuestionBankID :  obj.id , Name : txtShortListCriteria, NotConsider :NotConsider , MayConsider : MayConsider,StrongConsider:StrongConsider };
                                postDataForEligibilityCriteria.push(postData);
                            }
                        }
                    });
         
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("SaveEligibleCriteria", "AssessMent")",
                        contentType: 'application/json; charset=utf-8',
                        data: postDataForEligibilityCriteria,
                        beforeSend: function () {

                        },
                        complete: function () {

                        },
                        success: function (data) {
                            if(data.Result == 'Success')
                            {
                                $('#hdnSelectedShortListCriteria').val(data.AssesmentCriteriaId);
                                alert("Eligibility Criteria Created Successfully.");                                 
                            }
                            else{
                                alert("Something went wrong.")
                            }
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            console.log(xhr.status);
                            console.log(xhr.responseText);
                            console.log(thrownError);
                        },
                        cache: false
                    });

         
                }


            });



            $("input[name='ShortListCriteria']").change(function () {
                debugger;
                var selectedShortList = $('input[name=ShortListCriteria][type="radio"]:checked').val();
                if(selectedShortList == 'EXISTING')
                {
                    $('#divNewShortListCriteria').hide();
                    $('#ddlExistingShortListCriteria').show();
                }
                else{
                    $('#ddlExistingShortListCriteria').hide();
                    $('#divNewShortListCriteria').show();
                }
            });




            $('#home-tab').click();

            $('#chkCheckAllAssessMent').change(function () {
                selectedExamSyllabus = new Array();
                if ($('#chkCheckAllAssessMent').is(':checked')) {
                    $('.chkExamSubjectSelection').each(function (i, obj) {
                        $('#' + obj.id).prop('checked', true);
                        var elementId = obj.id;
                        var QuestionBankName = $('#spnQuestionBankName_' + obj.id).text();
                        var NoOfQuestions = $('#spnNoOfQuestions_' + obj.id).text();
                        var Duration = $('#spnDuration_' + obj.id).text();
                        var elementSelection = { id : elementId, QuestionBankName: QuestionBankName, NoOfQuestions: NoOfQuestions, Duration: Duration };
                        selectedExamSyllabus.push(elementSelection);
                    });
                }
                else {
                    $('.chkExamSubjectSelection').each(function (i, obj) {
                        $('#' + obj.id).prop('checked', false);
                    });
                }
            });

            $('#chkAlertEmail').change(function () {
                if ($('#chkAlertEmail').is(':checked')) {
                    $('#txtAreaAlertEmail').show();
                }
                else{
                    $('#txtAreaAlertEmail').hide();
                }
            });


            $('.chkExamSubjectSelection').change(function () {
                selectedExamSyllabus = new Array();
                $('.chkExamSubjectSelection').each(function (i, obj) {
                    //$('#' + obj.id).prop('checked', true);
                    if ($('#' + obj.id).is(':checked')) {
                        var elementId = obj.id;
                        var QuestionBankName = $('#spnQuestionBankName_' + obj.id).text();
                        var NoOfQuestions = $('#spnNoOfQuestions_' + obj.id).text();
                        var Duration = $('#spnDuration_' + obj.id).text();
                        var elementSelection = { id: elementId, QuestionBankName: QuestionBankName, NoOfQuestions: NoOfQuestions, Duration: Duration };
                        selectedExamSyllabus.push(elementSelection);
                    }
                });




            });



            $('#btnEmailTemplate').click(function () {
                $('#modalEmailTemplate').modal('show');
            });



        });





        $(function () {

            debugger;

            for(var items = 0 ; items < modelListQB.length;items++ )
            {
                var halfScore =  modelListQB[items].NoOfQuestions / 2;
                var fullScore = modelListQB[items].NoOfQuestions;
                $("#slider-range_"+ modelListQB[items].Id).slider({
                    range: true,
                    min: 0,
                    max: fullScore,
                    values: [halfScore, fullScore],
                    slide: function (event, ui) {
                        $("#txtSlider_"+ modelListQB[items].Id).val("" + ui.values[0] + "-" + ui.values[1]);
                    }
                });
                $("#txtSlider_"+ modelListQB[items].Id).val("" + $("#slider-range_"+ modelListQB[items].Id).slider("values", 0) + "-" + $("#slider-range_"+ modelListQB[items].Id).slider("values", 1));
            }



            //$('.clsSlider').slider({
            //    range: true,
            //    min: 0,
            //    max: 500,
            //    values: [75, 300],
            //    slide: function (event, ui) {
            //        $(this).val("" + ui.values[0] + " - " + ui.values[1]);
            //    }
            //});


        });
    </script>





    <!-- Modal -->
    <div class="modal fade" id="modalEmailTemplate" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Assessment Alert Content</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    Template <select>
                        <option selected>Default Template</option>
                    </select>
                    <br />

                    CC <input type="text" id="txtCCEMail" />
                    <br />
                    BCC <input type="text" id="txtBCCEMail" />
                    <br />
                    Email Body
                    <textarea id="emailBody">

  Hi,

This is an auto generated e-mail containing your login details for %companyName% hiring assessment.

URL to login - %testUrl%
User Name - %username%
Password - %password%
Assessment Name - %assessmentName%

The above login details are valid from %startDateTime% to %endDateTime%. You need to begin the test within the specified time interval.

Kindly read the instructions given before you proceed.
1) Do not copy paste the User Name and Password. Always type in.
2) Complete the test in one go.
3) This is a timed test, it is essential to keep track of time while answering the questions.
4) Answer all the questions and complete all the modules.

Please note that you can attempt the test only once using this User ID and Password

Thanks

</textarea>
                    <br />



                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal" id="saveContent">Save changes</button>
                </div>
            </div>
        </div>
    </div>

}




<input type="hidden" id="hdnSelectedShortListCriteria" />